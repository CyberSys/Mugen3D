local controller = require "controller.cs"
local trigger = require "trigger.cs"

--创建脚本执行环境
local function createENV(entity)
	local warp = function(func)
		return function( ... )
		    return func(entity, ...)
		end
	end
	local env = {}
	--将控制函数加入环境中
	for name, func in pairs(controller) do
		env[name] = warp(func)
	end
	--将触发检测函数加入环境中
	for name, func in pairs(trigger) do
		local newFunc = func
		if name == "Vel" or name == "Pos" or name == "P2Dist" or name == "FrontEdgeDist" or name == "BackEdgeDist" or name == "FrontStageDist" or name == "BackStageDist" then
            newFunc = function( ... )
            	local x,y = func(...)
            	return {x=x,y=y}
            end
		end 
		env[name] = warp(newFunc)
	end
	--一些常用方法
	env.print = print
	env.pairs = pairs
	env.math = math
	return env
end

local function createFSM(scriptName, entity)
	local fsm = require(scriptName)
	local env = createENV(entity)
	local updateFunc = function(_ENV)
	    local stateNo = StateNo()
		print("stateNo:",stateNo)
	    if fsm == nil then
		    return
	    end
        for i = -3, -1 do
    	    if fsm[i] and fsm[i].onUpdate then
		        fsm[i].onUpdate(_ENV)
	        end
        end
        local stateTime = StateTime()
        if stateTime == 0 then
        	 if fsm[stateNo] and fsm[stateNo].onEnter then
        	 	fsm[stateNo].onEnter(_ENV)
        	 end
        end
	    if fsm[stateNo] and fsm[stateNo].onUpdate then
	        fsm[stateNo].onUpdate(_ENV)
        end
    end 
	return {
        update = function()
            updateFunc(env)
        end
    }
end

return {create = createFSM}